name: .NET Framework Test Automation

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup MSBuild
      run: |
        $vsPath = "${env:ProgramFiles(x86)}\Microsoft Visual Studio\2022\*\MSBuild\Current\Bin\MSBuild.exe"
        if (Test-Path $vsPath) {
          $msbuildPath = Get-Item $vsPath | Select-Object -First 1 -ExpandProperty FullName
          echo "Found MSBuild at $msbuildPath"
          echo "MSBUILD_PATH=$msbuildPath" >> $env:GITHUB_ENV
        } else {
          Write-Error "MSBuild not found. Is Visual Studio 2022 installed?"
          exit 1
        }
      shell: pwsh
    
    - name: Restore NuGet packages
      run: |
        $nugetPath = "${env:ProgramFiles(x86)}\NuGet\nuget.exe"
        if (-not (Test-Path $nugetPath)) {
          $nugetPath = "$env:TEMP\nuget.exe"
          Invoke-WebRequest -Uri "https://dist.nuget.org/win-x86-commandline/latest/nuget.exe" -OutFile $nugetPath
        }
        $solutionFile = Get-ChildItem -Path . -Filter *.sln | Select-Object -First 1
        & $nugetPath restore $solutionFile
      shell: pwsh
    
    - name: Build
      run: |
        $solutionFile = Get-ChildItem -Path . -Filter *.sln | Select-Object -First 1
        & "${{ env.MSBUILD_PATH }}" $solutionFile /p:Configuration=Release /p:Platform="Any CPU"
      shell: pwsh
    
    - name: Test
      run: |
        $vstestPath = "${env:ProgramFiles(x86)}\Microsoft Visual Studio\2022\*\Common7\IDE\CommonExtensions\Microsoft\TestWindow\vstest.console.exe"
        $testRunner = Get-Item $vstestPath | Select-Object -First 1 -ExpandProperty FullName
        $testAssemblies = Get-ChildItem -Path . -Recurse -Filter "*Tests.dll" | Where-Object { $_.FullName -like "*\bin\Release\*" } | Select-Object -ExpandProperty FullName
        
        if ($testAssemblies) {
          & $testRunner $testAssemblies
        } else {
          Write-Error "No test assemblies found"
          exit 1
        }
      shell: pwsh
